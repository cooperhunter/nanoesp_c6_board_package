##############################################################
# NanoESP-C6 v1.0 (16MB Flash, 8MB OPI PSRAM) - Custom Definition
# This entry relies on an existing ESP32 Arduino core installation (e.g., v3.2.0+).
# It should appear under the "ESP32 Arduino" boards menu.
##############################################################

nanoespc6custom.name=NanoESP-C6 v1.0 (16M Flash, OPI PSRAM)

# --- Core Properties ---
# Эти параметры говорят Arduino IDE использовать компилятор и основные настройки от стандартного ESP32-C6
nanoespc6custom.build.board=ESP32C6_DEV       # Наследует некоторые свойства от ESP32C6_DEV из основного ядра
nanoespc6custom.build.core=esp32              # Используем ядро esp32
nanoespc6custom.build.variant=esp32c6         # Вариант для ESP32C6
nanoespc6custom.build.mcu=esp32c6

# --- Standard Build Properties ---
nanoespc6custom.build.f_cpu=160000000L
nanoespc6custom.build.flash_mode=qio          # QIO обычно стандарт для ESP32C6 (быстрее чем DIO)
nanoespc6custom.build.flash_freq=80m

# --- Flash Size Menu (сделаем опцию, но по умолчанию 16МБ) ---
nanoespc6custom.menu.FlashSize.16M=16MB (128Mb)
nanoespc6custom.menu.FlashSize.16M.build.flash_size=16M
# Если нужно, можно добавить другие размеры, но для этой платы нужен 16M
nanoespc6custom.menu.FlashSize.default=16M

# --- PSRAM Menu (Критически важно для включения PSRAM) ---
# Эти опции должны быть распознаны platform.txt основного ядра ESP32
# build.psram_type будет передано в систему сборки ESP-IDF
nanoespc6custom.menu.PSRAM.disabled=PSRAM Disabled
nanoespc6custom.menu.PSRAM.disabled.build.psram_type=disabled # Это значение должно отключать CONFIG_SPIRAM_SUPPORT

nanoespc6custom.menu.PSRAM.opi=OPI PSRAM Enabled
nanoespc6custom.menu.PSRAM.opi.build.psram_type=opi       # Это значение должно включать CONFIG_SPIRAM_SUPPORT и CONFIG_SPIRAM_MODE_OCT

nanoespc6custom.menu.PSRAM.default=opi # По умолчанию PSRAM включена (OPI)

# --- Partition Scheme Menu ---
# Используем стандартные схемы разделов из ядра Arduino для ESP32
# 'default_16MB' обычно означает что-то вроде: App 2MB / SPIFFS ~12MB
# 'huge_app_16MB' может быть App 4MB / SPIFFS ~10MB (если такая схема есть в ядре)
nanoespc6custom.menu.PartitionScheme.default_16MB=Default 16MB APP (Core Default)
nanoespc6custom.menu.PartitionScheme.default_16MB.build.partitions=default_16MB
# Если хотите кастомную таблицу (как мы делали для PlatformIO), ее нужно будет добавить в ZIP и указать здесь.
# Пока используем стандартную из ядра.
nanoespc6custom.menu.PartitionScheme.default=default_16MB

# --- CDC On Boot (USB Serial) ---
nanoespc6custom.menu.CDCOnBoot.default=cdc
nanoespc6custom.menu.CDCOnBoot.cdc=Enabled
nanoespc6custom.menu.CDCOnBoot.cdc.build.cdc_on_boot=1
nanoespc6custom.menu.CDCOnBoot.disable=Disabled
nanoespc6psram.menu.CDCOnBoot.disable.build.cdc_on_boot=0

# --- Upload Speed ---
nanoespc6custom.menu.UploadSpeed.921600=921600
nanoespc6custom.menu.UploadSpeed.921600.upload.speed=921600
nanoespc6custom.menu.UploadSpeed.default=921600

# --- Upload settings ---
nanoespc6custom.upload.tool=esptool_py
nanoespc6custom.upload.maximum_size=16777216 # 16MB
nanoespc6custom.upload.erase_cmd=erase_flash # Позволит использовать "Erase Flash: All"